{"version":3,"sources":["logo.svg","components/stateTable.js","components/combined.js","components/navbar.js","authorization.js","components/worldstats.js","store/actions.js","App.js","serviceWorker.js","store/index.js","store/countryreducer.js","store/initalData.js","index.js"],"names":["module","exports","StateTable","props","filteredData","useMemo","stateData","filter","item","index","state","className","Table","striped","responsive","map","dt","key","confirmed","active","deaths","recovered","totaltested","Combined","useState","stats","setStats","totalCases","setTotalCases","useEffect","finalStateData","axios","get","then","response","stateWiseTest","data","states_tested_data","DateArray","updatedon","split","finalDate","join","reverse","self","findIndex","t","totalNoOfCases","parseInt","reduce","accu","sum","statewise","i","length","j","Container","Row","Col","Navbar","to","exact","authorization","WorldStats","worldStats","setWorldStats","search","setSearch","singleStat","useSelector","allstats","cuntryData","setCountryData","suggest","setSuggest","visibility","setVisibility","dispatch","useDispatch","inputRef","useRef","countryData","countryName","config","headers","lat","lon","navigator","geolocation","getCurrentPosition","position","coords","latitude","toString","longitude","current","country","getCountryData","catch","error","console","log","query","searchQuery","countryname","payload","type","filteredCountry","initialCountry","md","total_cases","total_deaths","total_recovered","Form","inline","onSubmit","e","preventDefault","Input","placeholder","value","onChange","event","target","qur","RegExp","toLowerCase","listData","countries_stat","country_name","match","ct","autoSuggestList","onClick","innerRef","required","Button","color","focus","cases","active_cases","App","Fragment","path","component","Worldstats","Boolean","window","location","hostname","reducer","combineReducers","action","twocountries","filtercountry","trim","store","createStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,kC,sLCwC5BC,EArCI,SAACC,GAClB,IACMC,EADYC,mBAAQ,kBAAMF,EAAMG,YAAW,CAACH,EAAMG,YACzBC,QAC7B,SAACC,EAAMC,GAAP,MAAgC,UAAfD,EAAKE,SAGxB,OACE,yBAAKC,UAAU,mBACb,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACH,UAAU,QAClC,+BACE,4BACE,qCACA,yCACA,sCACA,sCACA,yCACA,6CAGJ,+BACGP,EACGA,EAAaW,KAAI,SAACC,GAAD,OACf,wBAAIC,IAAKD,EAAGN,OACV,4BAAKM,EAAGN,OACR,4BAAKM,EAAGE,WACR,4BAAKF,EAAGG,QACR,4BAAKH,EAAGI,QACR,4BAAKJ,EAAGK,WACR,4BAAKL,EAAGM,YAAcN,EAAGM,YAAc,SAG3C,SC2DCC,EAxFE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEeF,mBAAS,GAFxB,mBAEdG,EAFc,KAEFC,EAFE,KAsDrB,OAlDAC,qBAAU,WACR,IAAIC,EAEJC,IACGC,IAAI,qDACJC,MAAK,SAACC,GACL,IASIC,EATkBD,EAASE,KAAKC,mBAAmBtB,KAAI,SAACP,GAC1D,IACI8B,EADa9B,EAAK+B,UACKC,MAAM,KAFkC,EAGpC,CAACF,EAAU,GAAIA,EAAU,IAAvDA,EAAU,GAHwD,KAGpDA,EAAU,GAH0C,KAInE,IAAIG,EAAYH,EAAUI,KAAK,KAC/B,OAAO,eAAKlC,EAAZ,CAAkB+B,UAAWE,OAK5BE,UACApC,QACC,SAACC,EAAMC,EAAOmC,GAAd,OACEnC,IACAmC,EAAKC,WACH,SAACC,GAAD,OAAOA,EAAEpC,QAAUF,EAAKE,OAA2B,KAAlBoC,EAAExB,kBASvCyB,EAJgBZ,EAAcpB,KAAI,SAACP,GACrC,OAAOwC,SAA8B,KAArBxC,EAAKc,YAAqBd,EAAKc,YAAc,MAG5B2B,QAAO,SAACC,EAAMC,GAC/C,OAAOD,EAAOC,IACb,GACHvB,EAAcmB,GAGdhB,IAAMC,IAAI,0CAA0CC,MAAK,SAACC,GACxDJ,EAAiBI,EAASE,KAAKgB,UAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAewB,OAAQD,IACzC,IAAK,IAAIE,EAAI,EAAGA,EAAIpB,EAAcmB,OAAQC,IACpCzB,EAAeuB,GAAG3C,QAAUyB,EAAcoB,GAAG7C,QAC/CoB,EAAeuB,GAAG/B,YAAca,EAAcoB,GAAGjC,aAIvDI,EAASI,WAGd,IAGD,6BACE,wBAAInB,UAAU,oBAAd,wBACA,yBAAKA,UAAU,iBACb,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK9C,UAAU,0BACb,kBAAC+C,EAAA,EAAD,CAAK/C,UAAU,QACb,yCACA,4BAAKc,EAAM,GAAKA,EAAM,GAAGP,UAAY,IAArC,MAEF,kBAACwC,EAAA,EAAD,CAAK/C,UAAU,QACb,sCACA,4BAAKc,EAAM,GAAKA,EAAM,GAAGN,OAAS,IAAlC,MAEF,kBAACuC,EAAA,EAAD,CAAK/C,UAAU,QACb,sCACA,4BAAKc,EAAM,GAAKA,EAAM,GAAGL,OAAS,MAEpC,kBAACsC,EAAA,EAAD,CAAK/C,UAAU,QACb,yCACA,4BAAKc,EAAM,GAAKA,EAAM,GAAGJ,UAAY,MAEvC,kBAACqC,EAAA,EAAD,CAAK/C,UAAU,QACb,2CACA,4BAAKgB,OAKb,kBAAC,EAAD,CAAYrB,UAAWmB,M,QChEdkC,EArBA,WACb,OACE,6BACE,yBAAKhD,UAAU,UACb,wBAAIA,UAAU,mBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASiD,GAAG,IAAIzC,QAAM,EAAC0C,OAAK,GAA5B,SAIF,wBAAIlD,UAAU,YACZ,kBAAC,IAAD,CAASiD,GAAG,eAAeC,OAAK,GAAhC,oB,QCdCC,EAAgB,CAC3B,kBAAmB,qCACnB,iBAAkB,sD,wBCwMLC,EAlMI,WAAO,IAAD,EACavC,mBAAS,IADtB,mBAChBwC,EADgB,KACJC,EADI,OAEKzC,mBAAS,MAFd,mBAEhB0C,EAFgB,KAERC,EAFQ,KAGjBC,EAAaC,aAAY,SAAC3D,GAAD,OAAWA,EAAM4D,YAHzB,EAIc9C,mBAAS,MAJvB,mBAIhB+C,EAJgB,KAIJC,EAJI,OAKOhD,qBALP,mBAKhBiD,EALgB,KAKPC,EALO,OAMalD,oBAAS,GANtB,mBAMhBmD,EANgB,KAMJC,EANI,KAOjBC,EAAWC,cACXC,EAAWC,mBAEbC,EAAcb,EACdc,EAAcF,iBAAO,MAEnBG,EAAS,CACbC,QAAStB,GAEXjC,qBAAU,WACR,IAAIwD,EAAKC,EAgBHC,UAAUC,YACZD,UAAUC,YAAYC,oBAdH,SAACC,GACpBL,EAAMK,EAASC,OAAOC,SAASC,WAC/BP,EAAMI,EAASC,OAAOG,UAAUD,WAChC9D,IACGC,IADH,8BAC8BqD,EAD9B,YACqCC,EADrC,YAEGrD,MAAK,SAACC,GACLgD,EAAYa,QAAU7D,EAASE,KAAK4D,QACpCC,EAAe,GAAIf,EAAYa,YAEhCG,OAAM,SAACC,GACNF,EAAe,GAAI,YAMvBG,QAAQC,IAAI,iDAOhBtE,IACGC,IACC,uEACAmD,GAEDlD,MAAK,SAACC,GACL+B,EAAc/B,EAASE,WAE1B,IAGH,IAOM6D,EAAiB,SAACK,EAAOpB,GAC7B,IAAMqB,EAA8B,GAAhBD,EAAMhD,OAAc,KAAOgD,EAEzCE,EAActB,EACpBnD,IACGC,IACC,8EACAmD,GAEDlD,MAAK,SAACC,GACLsC,EAAetC,EAASE,MAEpByC,EADJ0B,EChFuB,SAACE,EAASH,GAAV,MAAqB,CAClDI,KAAM,gBACND,QAASA,EACTH,MAAOA,GD8EYK,CAAgBzE,EAASE,KAAMmE,GC3EtB,SAACE,EAASD,GAAV,MAA2B,CACvDE,KAAM,cACND,QAASA,EACTvB,YAAasB,GDyEMI,CAAe1E,EAASE,KAAMoE,QA6BjD,OACE,6BACE,wBAAI7F,UAAU,oBAAd,eACA,yBAAKA,UAAU,iBACb,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK9C,UAAU,oBACb,kBAAC+C,EAAA,EAAD,CAAKmD,GAAG,KACN,2CACA,4BAAK7C,EAAaA,EAAW8C,YAAc,IAA3C,MAEF,kBAACpD,EAAA,EAAD,CAAKmD,GAAG,KACN,4CACA,4BAAK7C,EAAaA,EAAW+C,aAAe,IAA5C,MAEF,kBAACrD,EAAA,EAAD,CAAKmD,GAAG,KACN,+CACA,4BAAK7C,EAAaA,EAAWgD,gBAAkB,IAA/C,SAKR,yBAAKrG,UAAU,aACb,kBAACsG,EAAA,EAAD,CACEC,QAAM,EACNC,SAzEc,SAACC,GACrBxC,GAAc,GACdwC,EAAEC,iBACFpB,EAAe/B,IAuETvD,UAAU,iCAEV,kBAAC2G,EAAA,EAAD,CACEZ,KAAK,OACLa,YAAY,wBACZC,MAAOtD,EACPuD,SAAU,SAACC,GAAD,OAtDI,SAACA,GACvBvD,EAAUuD,EAAMC,OAAOH,OACvB5C,GAAc,GACd,IAAIgD,EAAM,IAAIC,OAAO3D,EAASA,EAAO4D,cAAgB,GAAI,KAEzD1B,QAAQC,IAAI,YACZ,IAAM0B,EAAWxD,EACbA,EAAWyD,eACRjH,KAAI,SAACP,GACJ,OAAIA,EAAKyH,aAAaH,cAAcI,MAAMN,GACjCpH,EAAKyH,aAEL,QAGV1H,QAAO,SAAC4H,GAAD,OAAe,OAAPA,KAClB,KACoB,IAApBJ,EAASzE,QACXsB,GAAc,GAEhBF,EAAWqD,GAkCkBK,CAAgBV,IACrCW,QAAS,kBAAMlE,EAAU,OACzBmE,SAAUvD,EACVwD,UAAQ,IAEV,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU9H,UAAU,SAAlC,WAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,wBACEA,UAAS,uBAAkBuD,EAAS,YAAc,aAAzC,YACPS,EAAa,YAAc,eAG5BF,GAAWA,EAAQnB,OAAS,EACzBmB,EAAQ1D,KAAI,SAACP,GAAD,OACV,wBACE6H,QAAS,WACPlE,EAAU3D,EAAKsH,eACflD,GAAc,GACdG,EAASgB,QAAQ2C,SAEnBzH,IAAKT,GAEJA,MAGL,SAMZ,yBAAKG,UAAU,kCACb,kBAAC8C,EAAA,EAAD,KACGwB,GAAeA,EAAYX,SAAShB,OAAS,EAC5C2B,EAAYX,SAASvD,KAAI,SAACoH,GAAD,OACvB,kBAACzE,EAAA,EAAD,CAAKmD,GAAG,IAAI5F,IAAKkH,EAAGF,aAActH,UAAU,eAC1C,yBAAKA,UAAU,2BACb,4BAAKwH,EAAGF,cACR,4CAAkBE,EAAGQ,OACrB,6CAAmBR,EAAGS,cACtB,6CAAmBT,EAAG/G,QACtB,0CAAgB+G,EAAGnB,sBAKzB,wBAAIrG,UAAU,kBAAd,+C,cExKGkI,MAdf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKnI,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoI,KAAK,IAAIC,UAAWzH,EAAUsC,OAAK,IAC1C,kBAAC,IAAD,CAAOkF,KAAK,eAAeC,UAAWC,EAAYpF,OAAK,QCL7CqF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2D,oBCdAoB,EAAUC,YAAgB,CAC9BjF,SCL4B,WAA2B,IAA1B5D,EAAyB,uDAAjB,KAAM8I,EAAW,uCACtD,OAAQA,EAAO9C,MACb,IAAK,cACH,IAAM+C,EAAeD,EAAO/C,QAAQuB,eAAezH,QACjD,SAACC,EAAMC,GACL,GAAIA,EAAQ,GAAKA,EAAQ,EACvB,OAAOD,KAIPoG,EAAiB4C,EAAO/C,QAAQuB,eAAezH,QACnD,SAACC,EAAMC,GACL,GAAID,EAAKyH,cAAgBuB,EAAOtE,YAC9B,OAAO1E,KAIb,OAAO,eAAKE,EAAZ,CAAmB4D,SAAS,GAAD,mBAAMsC,GAAN,YAAyB6C,MAEtD,IAAK,gBACH,IAAMC,EAAgBF,EAAO/C,QAAQuB,eACjCwB,EAAO/C,QAAQuB,eAAezH,QAC5B,SAACC,GAAD,OACEA,EAAKyH,aAAaH,cAAc6B,QAChCH,EAAOlD,MAAMwB,cAAc6B,UAE/B,KACJ,OAAO,eAAKjJ,EAAZ,CAAmB4D,SAAUoF,IAG/B,QACE,OAAOhJ,MDlBEkJ,EALDC,aACZ,SAACnJ,EAAO8I,GAAR,OAAmBF,EAAQ5I,EAAO8I,KEcT,ICf3BM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINK,SAASC,eAAe,SJmHpB,kBAAmB3E,WACrBA,UAAU4E,cAAcC,MACrBnI,MAAK,SAAAoI,GACJA,EAAaC,gBAEdpE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMoE,c","file":"static/js/main.1c7d2266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useMemo } from \"react\";\r\nimport { Table, Container } from \"reactstrap\";\r\n\r\nconst StateTable = (props) => {\r\n  const storeData = useMemo(() => props.stateData, [props.stateData]);\r\n  const filteredData = storeData.filter(\r\n    (item, index) => item.state !== \"Total\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Table striped responsive className=\"mb-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>State</th>\r\n            <th>Confirmed</th>\r\n            <th>Active</th>\r\n            <th>Deaths</th>\r\n            <th>Recovered</th>\r\n            <th>Total Tests</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredData\r\n            ? filteredData.map((dt) => (\r\n                <tr key={dt.state}>\r\n                  <td>{dt.state}</td>\r\n                  <td>{dt.confirmed}</td>\r\n                  <td>{dt.active}</td>\r\n                  <td>{dt.deaths}</td>\r\n                  <td>{dt.recovered}</td>\r\n                  <td>{dt.totaltested ? dt.totaltested : \"-\"}</td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default StateTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport StateTable from \"./stateTable\";\r\n\r\nconst Combined = () => {\r\n  const [stats, setStats] = useState([]);\r\n  const [totalCases, setTotalCases] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let finalStateData;\r\n    // Total Test Cases\r\n    axios\r\n      .get(\"https://api.covid19india.org/state_test_data.json\")\r\n      .then((response) => {\r\n        let filterStateTest = response.data.states_tested_data.map((item) => {\r\n          let formatdate = item.updatedon;\r\n          let DateArray = formatdate.split(\"/\");\r\n          [DateArray[0], DateArray[1]] = [DateArray[1], DateArray[0]];\r\n          let finalDate = DateArray.join(\"/\");\r\n          return { ...item, updatedon: finalDate };\r\n        });\r\n\r\n        //Getting latest total cases tests\r\n        let stateWiseTest = filterStateTest\r\n          .reverse()\r\n          .filter(\r\n            (item, index, self) =>\r\n              index ===\r\n              self.findIndex(\r\n                (t) => t.state === item.state && t.totaltested !== \"\"\r\n              )\r\n          );\r\n\r\n        //Setting total tested cases to 0 for the state where there are no case tested\r\n        let filteredCases = stateWiseTest.map((item) => {\r\n          return parseInt(item.totaltested !== \"\" ? item.totaltested : 0);\r\n        });\r\n        //Overall Country Tests\r\n        let totalNoOfCases = filteredCases.reduce((accu, sum) => {\r\n          return accu + sum;\r\n        }, 0);\r\n        setTotalCases(totalNoOfCases);\r\n\r\n        //Getting State wise data plus adding latest totalcase tested to every state\r\n        axios.get(\"https://api.covid19india.org/data.json\").then((response) => {\r\n          finalStateData = response.data.statewise;\r\n          for (let i = 0; i < finalStateData.length; i++) {\r\n            for (let j = 0; j < stateWiseTest.length; j++) {\r\n              if (finalStateData[i].state === stateWiseTest[j].state) {\r\n                finalStateData[i].totaltested = stateWiseTest[j].totaltested;\r\n              }\r\n            }\r\n          }\r\n          setStats(finalStateData);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center my-4\">India COVID-19 Stats</h1>\r\n      <div className=\"stats-wrapper\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"mx-3\">\r\n              <h2>Confirmed</h2>\r\n              <h3>{stats[0] ? stats[0].confirmed : \"-\"} </h3>\r\n            </Col>\r\n            <Col className=\"mx-3\">\r\n              <h2>Active</h2>\r\n              <h3>{stats[0] ? stats[0].active : \"-\"} </h3>\r\n            </Col>\r\n            <Col className=\"mx-3\">\r\n              <h2>Deaths</h2>\r\n              <h3>{stats[0] ? stats[0].deaths : \"-\"}</h3>\r\n            </Col>\r\n            <Col className=\"mx-3\">\r\n              <h2>Recovered</h2>\r\n              <h3>{stats[0] ? stats[0].recovered : \"-\"}</h3>\r\n            </Col>\r\n            <Col className=\"mx-3\">\r\n              <h2>Total Tests</h2>\r\n              <h3>{totalCases}</h3>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <StateTable stateData={stats} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combined;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <ul className=\"navlist mx-auto\">\r\n          <li className=\"navlinks\">\r\n            <NavLink to=\"/\" active exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"navlinks\">\r\n            <NavLink to=\"/world_stats\" exact>\r\n              World Stats\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const authorization = {\r\n  \"X-RapidAPI-Host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n  \"X-RapidAPI-Key\": \"68781a08bcmsh8884703f7285062p1d71e1jsnf3468378e101\",\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authorization } from \"../authorization\";\r\nimport { initialCountry, filteredCountry } from \"../store/actions\";\r\n\r\nimport { Container, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst WorldStats = () => {\r\n  const [worldStats, setWorldStats] = useState({});\r\n  const [search, setSearch] = useState(null);\r\n  const singleStat = useSelector((state) => state.allstats);\r\n  const [cuntryData, setCountryData] = useState(null);\r\n  const [suggest, setSuggest] = useState();\r\n  const [visibility, setVisibility] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const inputRef = useRef();\r\n\r\n  let countryData = singleStat;\r\n  let countryName = useRef(null);\r\n\r\n  const config = {\r\n    headers: authorization,\r\n  };\r\n  useEffect(() => {\r\n    let lat, lon;\r\n    //Geolocation\r\n    const Geolocation = () => {\r\n      const showposition = (position) => {\r\n        lat = position.coords.latitude.toString();\r\n        lon = position.coords.longitude.toString();\r\n        axios\r\n          .get(`https://geocode.xyz/${lat},${lon}?json=1`)\r\n          .then((response) => {\r\n            countryName.current = response.data.country;\r\n            getCountryData(\"\", countryName.current);\r\n          })\r\n          .catch((error) => {\r\n            getCountryData(\"\", null);\r\n          });\r\n      };\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(showposition);\r\n      } else {\r\n        console.log(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    };\r\n    Geolocation();\r\n    // getCountryData(\"\");\r\n\r\n    //Starting World Stats\r\n    axios\r\n      .get(\r\n        \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\",\r\n        config\r\n      )\r\n      .then((response) => {\r\n        setWorldStats(response.data);\r\n      });\r\n  }, []);\r\n\r\n  //On Form Submit\r\n  const submitHandler = (e) => {\r\n    setVisibility(false);\r\n    e.preventDefault();\r\n    getCountryData(search);\r\n  };\r\n\r\n  //Filtered Data\r\n  const getCountryData = (query, countryName) => {\r\n    const searchQuery = query.length == 0 ? null : query;\r\n\r\n    const countryname = countryName;\r\n    axios\r\n      .get(\r\n        \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\",\r\n        config\r\n      )\r\n      .then((response) => {\r\n        setCountryData(response.data);\r\n        searchQuery\r\n          ? dispatch(filteredCountry(response.data, searchQuery))\r\n          : dispatch(initialCountry(response.data, countryname));\r\n      });\r\n  };\r\n\r\n  //Autosuggest\r\n\r\n  const autoSuggestList = (event) => {\r\n    setSearch(event.target.value);\r\n    setVisibility(true);\r\n    let qur = new RegExp(search ? search.toLowerCase() : \"\", \"g\");\r\n\r\n    console.log(\"executed\");\r\n    const listData = cuntryData\r\n      ? cuntryData.countries_stat\r\n          .map((item) => {\r\n            if (item.country_name.toLowerCase().match(qur)) {\r\n              return item.country_name;\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          .filter((ct) => ct !== null)\r\n      : null;\r\n    if (listData.length === 0) {\r\n      setVisibility(false);\r\n    }\r\n    setSuggest(listData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center my-4\">World Stats</h1>\r\n      <div className=\"stats-wrapper\">\r\n        <Container>\r\n          <Row className=\"world-stats py-4\">\r\n            <Col md=\"4\">\r\n              <h2>Total Cases</h2>\r\n              <h3>{worldStats ? worldStats.total_cases : \"-\"} </h3>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <h2>Total Deaths</h2>\r\n              <h3>{worldStats ? worldStats.total_deaths : \"-\"} </h3>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <h2>Total Recovered</h2>\r\n              <h3>{worldStats ? worldStats.total_recovered : \"-\"} </h3>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <div className=\"searchbar\">\r\n        <Form\r\n          inline\r\n          onSubmit={submitHandler}\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your country...\"\r\n            value={search}\r\n            onChange={(event) => autoSuggestList(event)}\r\n            onClick={() => setSearch(null)}\r\n            innerRef={inputRef}\r\n            required\r\n          />\r\n          <Button color=\"primary\" className=\"h-100\">\r\n            Search\r\n          </Button>\r\n        </Form>\r\n        <div className=\"autosuggest-wrapper\">\r\n          <div className=\"auto-suggest-box\">\r\n            <ul\r\n              className={`country-list ${search ? \"displayOn\" : \"displayOff\"} ${\r\n                visibility ? \"displayOn\" : \"displayOff\"\r\n              }`}\r\n            >\r\n              {suggest && suggest.length > 0\r\n                ? suggest.map((item) => (\r\n                    <li\r\n                      onClick={() => {\r\n                        setSearch(item.toLowerCase());\r\n                        setVisibility(false);\r\n                        inputRef.current.focus();\r\n                      }}\r\n                      key={item}\r\n                    >\r\n                      {item}\r\n                    </li>\r\n                  ))\r\n                : null}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-results container-fluid\">\r\n        <Row>\r\n          {countryData && countryData.allstats.length > 0 ? (\r\n            countryData.allstats.map((ct) => (\r\n              <Col md=\"4\" key={ct.country_name} className=\"text-center\">\r\n                <div className=\"country-stats py-4 px-3\">\r\n                  <h2>{ct.country_name}</h2>\r\n                  <h3>Total Cases: {ct.cases}</h3>\r\n                  <h3>Active Cases: {ct.active_cases}</h3>\r\n                  <h3>Total Deaths: {ct.deaths}</h3>\r\n                  <h3>Recovered: {ct.total_recovered}</h3>\r\n                </div>\r\n              </Col>\r\n            ))\r\n          ) : (\r\n            <h2 className=\"country-center\">\r\n              Country not found or check the spelling\r\n            </h2>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldStats;\r\n","export const filteredCountry = (payload, query) => ({\r\n  type: \"SEARCHCOUNTRY\",\r\n  payload: payload,\r\n  query: query,\r\n});\r\n\r\nexport const initialCountry = (payload, countryname) => ({\r\n  type: \"INITIALLOAD\",\r\n  payload: payload,\r\n  countryName: countryname,\r\n});\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport Combined from \"./components/combined\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Worldstats from \"./components/worldstats\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" component={Combined} exact />\r\n          <Route path=\"/world_stats\" component={Worldstats} exact />\r\n        </Switch>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { InitialData } from \"./initalData\";\r\nimport { countryReducer } from \"./countryreducer\";\r\n\r\nconst reducer = combineReducers({\r\n  allstats: countryReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  (state, action) => reducer(state, action),\r\n  InitialData\r\n);\r\n\r\nexport default store;\r\n","export const countryReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"INITIALLOAD\":\r\n      const twocountries = action.payload.countries_stat.filter(\r\n        (item, index) => {\r\n          if (index > 0 && index < 3) {\r\n            return item;\r\n          }\r\n        }\r\n      );\r\n      const initialCountry = action.payload.countries_stat.filter(\r\n        (item, index) => {\r\n          if (item.country_name == action.countryName) {\r\n            return item;\r\n          }\r\n        }\r\n      );\r\n      return { ...state, allstats: [...initialCountry, ...twocountries] };\r\n      break;\r\n    case \"SEARCHCOUNTRY\":\r\n      const filtercountry = action.payload.countries_stat\r\n        ? action.payload.countries_stat.filter(\r\n            (item) =>\r\n              item.country_name.toLowerCase().trim() ==\r\n              action.query.toLowerCase().trim()\r\n          )\r\n        : null;\r\n      return { ...state, allstats: filtercountry };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// import { authorization } from \"../authorization\";\r\n\r\n// const InitialData = () => {\r\n//   const [getAllStats, setAllStats] = useState([]);\r\n//   const config = {\r\n//     headers: authorization,\r\n//   };\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\r\n//         \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\",\r\n//         config\r\n//       )\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         setAllStats({ allstats: response.data });\r\n//       });\r\n//   }, []);\r\n//   //   return getAllStats;\r\n// };\r\nexport const InitialData = {};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}